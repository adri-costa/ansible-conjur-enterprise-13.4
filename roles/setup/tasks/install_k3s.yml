---
- name: Instalação do K3s (Prioridade para install_k3s.yml)
  hosts: localhost
  become: true

  vars:
    k3s_version: "v1.26.0"
    k3s_install_url: "https://get.k3s.io"

  tasks:
    - name: Verificar se o K3s já está instalado
      command: k3s --version
      register: k3s_installed
      ignore_errors: true
      changed_when: false

    - name: Instalar o K3s se não estiver presente
      shell: "curl -sfL {{ k3s_install_url }} | sh -s - --write-kubeconfig-mode 644"
      when: k3s_installed.rc != 0
      register: install_result
      failed_when: install_result.rc != 0

    - name: Habilitar e iniciar o serviço do K3s
      systemd:
        name: k3s
        enabled: yes
        state: started
      when: k3s_installed.rc != 0

    - name: Verificar se o K3s está rodando
      shell: "systemctl is-active k3s"
      register: k3s_status
      changed_when: false
      failed_when: k3s_status.stdout != "active"

    - name: Exibir o status do K3s
      debug:
        msg: "O serviço K3s está rodando: {{ k3s_status.stdout }}"

    - name: Criar diretório ~/.kube se não existir
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0755'

    - name: Copiar configuração do K3s para usuário local
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0600'
      when: k3s_status.stdout == "active"

    - name: Garantir a propriedade correta de ~/.kube/config
      file:
        path: "{{ ansible_env.HOME }}/.kube/config"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0600'

    - name: Exibir os nós no cluster
      shell: "kubectl get nodes"
      register: nodes_info
      changed_when: false
      failed_when: nodes_info.rc != 0

    - name: Exibir os nós
      debug:
        msg: "{{ nodes_info.stdout }}"

  rescue:
    - name: "⚠️ O install_k3s.yml falhou. Tentando fallback para k3s.yaml..."
      shell: "curl -sfL {{ k3s_install_url }} | sh -s - --write-kubeconfig-mode 644"
      args:
        executable: /bin/bash
      register: fallback_install
      failed_when: fallback_install.rc != 0

    - name: Recarregar status do K3s após fallback
      shell: "systemctl is-active k3s"
      register: k3s_fallback_status
      changed_when: false
      failed_when: k3s_fallback_status.stdout != "active"

    - name: Exibir status após fallback
      debug:
        msg: "Após o fallback, o serviço K3s está rodando: {{ k3s_fallback_status.stdout }}"
